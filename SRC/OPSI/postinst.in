#! /bin/bash
#=====================================================================
# postinst script
# This script executes after unpacking files from that archive and registering the product at the depot.
#
# The following environment variables can be used to obtain information about the current installation:
#   PRODUCT_ID: id of the current product
#   CLIENT_DATA_DIR: directory which contains the installed client data
#=====================================================================
# J. Boettge <boettge@mpi-halle.mpg.de>  2018-10-25 13:34:36 +0200
#=====================================================================

LOGFILE={{O_INST_LOG}}

exec >> $LOGFILE
exec 2>&1
chgrp opsiadmin $LOGFILE
chmod g+rw $LOGFILE

echo "=================================================="
echo "${PRODUCT_ID} POSTINST LOG"
echo "=================================================="

SRC="${CLIENT_DATA_DIR}/../_SOURCE/${PRODUCT_ID##0_}"
DST="${CLIENT_DATA_DIR}/files"
# remove trailing "/" in path:
DST=${DST%\/}
TMP_DIR=${CLIENT_DATA_DIR}/../${PRODUCT_ID}.tmp
ERR=0

### check for testing and O4I package:
P=${PRODUCT_ID}
[ "${P}" = "${P##0_}" -a "${P}" = "${P##test_}" ] &&  IS_TESTING=false || IS_TESTING=true
P=${P/#0_/}
P=${P/#test_/}
[ "${P}" = "${P##o4i_}" ] && IS_O4I=false || IS_O4I=true
[ "${P}" = "${P##dfn_}" ] && IS_DFN=false || IS_DFN=true

if [ $IS_O4I == true -o $IS_DFN == true]; then
	 [ ! -d "${DST}" -a ! -d $TMP_DIR/files ] && mkdir $DST
else
	### symlink files directory to ../_SOURCE/${PRODUCT_ID##0_}
	### only for non-DFN packages:
	if [ -h "${DST}" ]; then
		echo "Symlink to [${DST}] already exists. - Replacing"
		rm ${DST}
	fi
	
	if [ ! -d "${SRC}" ]; then	
		echo "Directory [${SRC}] does not exist. Try to create it."
		mkdir -m 750 ${SRC} && chgrp pcpatch ${SRC}
	fi

	if [ -d "${DST}" ]; then
		echo "Directory [${DST}] already exists!\nSkipping creation of symlink."
	elif [ -f "${DST}" ]; then
		echo "File [${DST}] already exists!\nSkipping creation of symlink."
	else
		ln -s ${SRC} ${DST}
	fi
fi


### restore custom directories
if [ -d $TMP_DIR ]; then
	echo 'Restoring previous directories...'
	TMP_DIR=`realpath $TMP_DIR`
	for DIRNAME in custom files; do
		echo "* [${DIRNAME}]"
		if [ -d $TMP_DIR/${DIRNAME} ]; then
			test -e $CLIENT_DATA_DIR/${DIRNAME} || mkdir $CLIENT_DATA_DIR/${DIRNAME}
			echo -e "\tmoving $TMP_DIR/${DIRNAME} to $CLIENT_DATA_DIR/"
			rsync -av --remove-source-files $TMP_DIR/${DIRNAME}/. $CLIENT_DATA_DIR/${DIRNAME}/ &&\
			rm -rf $TMP_DIR/${DIRNAME} || exit 1
		else
			echo -e "\tdoes not exist here"
		fi
	done
fi
echo "Removing temporary files..."
rm -rf $TMP_DIR


{{^ifdef_allinc}}
{{#ifdef_auto_download}}
### product downloader
if [[ -f "${CLIENT_DATA_DIR}/product_downloader.sh" ]]; then
	echo "Calling product downloader"
	DEST_DIR=${DST} ${CLIENT_DATA_DIR}/product_downloader.sh
	ERR=$?
else
	echo "Product downloader not found!"
	ERR=2
fi
exit $ERR
{{/ifdef_auto_download}}
{{/ifdef_allinc}}
