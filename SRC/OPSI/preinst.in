#! /bin/bash
#=====================================================================
# preinst script for: (generic)
# Version 2.0
#
# This script executes before that package will be unpacked from its
# archive file.
#
# The following environment variables can be used to obtain information
# about the current installation:
#   PRODUCT_ID: id of the current product
#   CLIENT_DATA_DIR: directory where client data will be installed
#=====================================================================
# J. Boettge <boettge@mpi-halle.mpg.de>  2018-10-25 16:39:39 +0200
#=====================================================================

TS=$(date +"%s")
LOGFILE={{O_INST_LOG}}

exec >> $LOGFILE
exec 2>&1
chgrp opsiadmin $LOGFILE
chmod g+rw $LOGFILE

echo -e '\n\n'
echo "=================================================="
echo "${PRODUCT_ID} ({{ORGNAME}}) PREINST LOG"
echo "=================================================="
date +'Start: %F  %H:%M:%S'

TMP_DIR=${CLIENT_DATA_DIR}/../${PRODUCT_ID}.tmp
NOW=`date +"%F_%H%M%S"`

if [ -d $TMP_DIR ]; then
	# echo "Temporary directory $TMP_DIR already exist, aborting!"
	# exit 1
	TMP_DIR_OLD=${CLIENT_DATA_DIR}/../${PRODUCT_ID}_${NOW}.tmp
	echo "Temporary directory $TMP_DIR already exist. Moving to: ${TMP_DIR_OLD}"
	[ -d $TMP_DIR_OLD ] && rm -rf $TMP_DIR_OLD
	mv $TMP_DIR $TMP_DIR_OLD
fi

[ ! -d $CLIENT_DATA_DIR ] && exit 0
mkdir $TMP_DIR
[ -d $TMP_DIR ] && TMP_DIR=`readlink -f $TMP_DIR`

echo "Saving previous directories..."
#...but no symlinks
for DIRNAME in custom files; do
	path=$CLIENT_DATA_DIR/${DIRNAME}
	echo "* [${path}]"
	if [ -e $path -a ! -h ${path} ]; then
		echo -e "\tmoving ${path} to ${TMP_DIR}/"
		mv ${path} ${TMP_DIR}/ || exit 2
	else
		echo -e "\tdoes not exist or is a symlink"
	fi
done

{{^ifdef_keepfiles}}
if [ -d $TMP_DIR/files ] ; then
	echo "Removing outdated files..."
	REVER=`echo {{O_SOFTWARE_VER}} | sed -e 's/\./\\\\./g'`
	REGEX="^.*/{{O_SOFTWARE}}\.${REVER}\..*"
	echo "* {{O_SOFTWARE}} version = '$REVER'"
	echo "* using regex: '${REGEX}'"
	find  $TMP_DIR/files/ -type f -not -iregex "${REGEX}" -exec rm -vf {} \;
fi
{{/ifdef_keepfiles}}
{{#ifdef_keepfiles}}
echo "Keep everything in files/"
{{/ifdef_keepfiles}}

date +'Finish: %F  %H:%M:%S'
TE=$(date +"%s")
echo  "*** Script runtime: $(($TE - $TS)) seconds ***"
exit 0
