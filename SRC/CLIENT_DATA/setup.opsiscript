;======================================================================
; setup.opsiscript VIVALDI
; J. Boettge <boettge@mpi-halle.mpg.de>  2023-04-21 15:37:21 +0200
;======================================================================

;======================================================================
[Actions]
;======================================================================
encoding=utf8
setLogLevel=5
; Log Errors in Logfile and abort:
ExitOnError=true
; Show syntax errors in the script:
ScriptErrorMessages=off
; Dont trace step by step through the script:
TraceMode=off
; Let started programs run in front of the winst window
StayOnTop=false
;----------------------------------------------------------------------

include_insert "%ScriptPath%\product_variables.opsiinc"

if not(HasMinimumSpace ("%SYSTEMDRIVE%", $MinimumSpace$))
	LogError "Not enough space on %SYSTEMDRIVE%: . "+$MinimumSpace$+" on Drive %SYSTEMDRIVE%: needed for "+$ProductId$+"."
	isFatalError
else
	if FileExists("%ScriptPath%\delsub.opsiinc")
		comment  "Starting uninstall sub section"
		; sub "%ScriptPath%\delsub.opsiinc"	
		include_append "%ScriptPath%\delsub.opsiinc"
		sub_delsub_main
	else
		logError "Can't find uninstaller script"
		isFatalError "delsub.opsiinc not found"
	endif
	
	ShowBitmap $Img_Install$ $ProductName$
	message "Installing " + $ProductName$ + " " + $Version$ + " (" + $sw_arch$ + " bit)"
	
	marktime
	
	;=== cleanup temporary folder
	if FileExists($ExDirLong$)
		comment "Cleanup temp folder: " + $ExDirLong$
		set $LogLevel$ = getLogLevel
		SetLogLevel=5
		Files_CleanupTempFolder
		SetLogLevel=$LogLevel$
	endif
	if FileExists($ExDirLong$)
		LogWarning "Temp folder [" + $ExDirLong$ + "] still exists"
	endif
	
	;=== extract EXE to $TmpDir$\$Archive$
	Message "Extracting archive from installer " + $Installer$
	ShellInAnIcon_UnzipExe
	set $ExitCode$ = getLastExitCode
	if not($ExitCode$ = "0")
		LogError "Error " + $ExitCode$ + " while extracting archive"
		; isFatalError "Error extracting installer"
	endif
	
	if not(FileExists($TempDir$+"\"+$Archive$))
		LogError "Archive does not exist: " $TempDir$+"\"+$Archive$
		isFatalError "Archive not found"
	endif
	
	;=== extract 7Z archive to $TempDir$
	ShellInAnIcon_UnzipArchive
	set $ExitCode$ = getLastExitCode
	if not($ExitCode$ = "0")
		LogError "Error " + $ExitCode$ + " while extracting archive"
		isFatalError "Error extracting archive"
	endif
	
	Files_CleanupArchive
	
	if not(FileExists($ExDirLong$))
		LogError "Temporary application folder does not exist: " $ExDirLong$
		isFatalError $ExDir$ +" - folder not found!"
	endif	
	
	set $LogLevel$ = getLogLevel
	SetLogLevel=5
	Files_MoveToInstallDir
	SetLogLevel=$LogLevel$
		
	if FileExists($ExDirLong$)
		comment "Cleanup temp folder: " + $ExDirLong$
		set $LogLevel$ = getLogLevel
		SetLogLevel=5
		Files_CleanupTempFolder
		SetLogLevel=$LogLevel$
	endif	

	if not(FileExists($InstallDir$+"\"+$MainBin$))
		LogError "Main binary " + $MainBin$ +" not found"
		isFatalError "MainBin not found"	
	endif


	ShowBitmap $Img_Config$ $ProductName$

	;=== create start menu entry
	LinkFolder_CreateVivaldi
	
	;=== create desktop link if requested
	if ($sw_DesktopLink$ = "true")
		LinkFolder_CreateDesktopLink
	endif
	
	;=== deactivate update notifier if requested
	if ($pr_NoUpdNotify$ = "true") and (FileExists($NotifierBin$))
		Message "Disabling update notifier"
		Files_disable_update_notifier
	endif

	;=== write helper info to registry
	; Set $OutStream$ = shellCall('echo %DATE%_%TIME%')
	set $OutStream$ = PowerShellCall('Get-Date -Format "yyyy-MM-dd hh:mm:ss (zzzz)"')
	if count($OutStream$) INT> "0"
		Set $DateTime$ = takeString(0, $OutStream$)
	endif

	Message "Set up Vivaldi handler in registry "
	Registry_WriteVivaldiHTM /sysnative

	;=== make vivaldi to default browser if requested
	if ($pr_MakeDefault$ = "true")
		Message "Making Vivaldi to default browser"
		Registry_MakeVivaldiDefault /sysnative
	endif

	;=== custom post install
	if not ($CustomPostInstall$ = "none")
		if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
			ShowBitmap $Img_Install_Custom$ $ProductName$
			comment "Starting custom post install"
			if LineExistsIn("[SUB_POST_INSTALL]", "%ScriptPath%\custom\" + $CustomPostInstall$)
				include_append "%ScriptPath%\custom\" + $CustomPostInstall$
				comment "calling section: SUB_POST_INSTALL"
				SUB_POST_INSTALL
			else
				comment "calling section: Sub_InstallAppendix"
				Sub_InstallAppendix
			endif
			ShowBitmap $Img_Install$ $ProductName$
		else
			logError "Can't find custom post install script: %ScriptPath%\custom\" + $CustomPostInstall$
		endif
	endif

	;=== get estimated size
	set $OutStream$ = PowerShellCall('[math]::round(($(Get-Item "'+ $InstallDir$ +'" | Get-ChildItem -Recurse | measure -Sum Length).Sum/1024))')
	if count($OutStream$) INT> "0"
		set $EstimatedSize$ = takeString(0, $OutStream$)
		comment "Measured size of installation directory: " + $EstimatedSize$ + " kBytes"
	else
		set $EstimatedSize$ = "0"
	endif

	;=== write uninstall information to registry
	;; obsolete uninstall information from package version 40:
	;Registry_WriteVivaldiInfo /sysnative
	;;..use regular uninstall information instead:
	if $sw_arch$ = "64"
		Registry_WriteVivaldiUninstallKey /64Bit
	elseif $sw_arch$ = "32"
		Registry_WriteVivaldiUninstallKey /32Bit
	else
		Registry_WriteVivaldiUninstallKey /SysNative
	endif

	;=== configure user profile(s)
	if FileExists("%ScriptPath%\config_profile.opsiscript")
		Message  "Starting profile config sub section"
		ShowBitmap $Img_Config$ $ProductName$
		include_append "%ScriptPath%\config_profile.opsiscript"
		ProfileActions
	else
		logError "Can't find profile config script"
		isFatalError "config_profile.opsiscript not found"
	endif
	
	;=== measure installation time
	set $TimeDiff$ = getDiffTimeSec
	Message  "Setup time: " + $TimeDiff$ + " seconds"	
	
endif


;=====================================================================
[ShellInAnIcon_UnzipExe]
;=====================================================================
$SEVENZIP$ e -y -so "$Installer$" > "$TempDir$\$Archive$"

;=====================================================================
[ShellInAnIcon_UnzipArchive]
;=====================================================================
$SEVENZIP$ x -y -o"$TempDir$" "$TempDir$\$Archive$"

;=====================================================================
[Files_CleanupTempFolder]
;=====================================================================
del -sf "$ExDirLong$"

;=====================================================================
[Files_CleanupArchive]
;=====================================================================
del -f "$TempDir$\$Archive$"

;=====================================================================
[Files_MoveToInstallDir]
;=====================================================================
;SourcePath 		= $TempDir$
;CheckTargetPath	= $InstallBase$
;move -c "$TempDir$\$ExDir$" "$InstallBase$\$ProductDir$"

SourcePath 		= "$ExDirLong$"
CheckTargetPath	= "$InstallDir$"
copy -secr "$ExDirLong$\*.*" "$InstallDir$"

;=====================================================================
[Files_disable_update_notifier]
;=====================================================================
rename "$NotifierBin$" "$NotifierBin$.disabled"

;=====================================================================
[LinkFolder_CreateVivaldi]
;=====================================================================
set_basefolder common_programs
; set_subfolder "$ProductName$"
set_link 
	name: $ProductName$
	target: "$InstallDir$\$MainBin$"
	parameters:
	working_dir:
	icon_file:
	icon_index:
end_link

;=====================================================================
[LinkFolder_CreateDesktopLink]
;=====================================================================
set_basefolder common_desktopdirectory
set_subfolder ""
set_link
       name: $ProductName$
       target: "$InstallDir$\$MainBin$"
       parameters:
       working_dir: "$InstallDir$"
       icon_file:
       icon_index:
end_link

;=====================================================================
[Registry_WriteVivaldiInfo]
;=====================================================================
openkey [$PackageReg$]
set "InstallDir"	= "$InstallDir$"
set "Version"		= "$Version$"
set "Architecture"	= "$sw_arch$"
set "DateTime"		= "$DateTime$"
set "ProductName"	= "$ProductName$"

;=====================================================================
[Registry_WriteVivaldiUninstallKey]
;=====================================================================
openkey [$RegPathUninstall$\$ProductName$]
set "DisplayName"         = "$ProductName$ (installed by OPSI)"
set "OPSIProductID"       = "$FullProductId$"
set "OPSIProductName"     = "$ProductName$"
set "OPSIPackageVersion"  = "$PackageVersion$"
set "DisplayVersion"      = "$Version$"
set "DisplayIcon"         = "$PathToExe$"
set "InstallLocation"     = "$InstallDir$"
set "InstallArchitecture" = "$sw_arch$"
set "InstallDateTime"	  = "$DateTime$"
set "EstimatedSize"       = REG_DWORD:$EstimatedSize$
set "UninstallString"     = REG_SZ:'$UninstString$'
set "NoRepair"            = REG_DWORD:0001
set "NoModify"            = REG_DWORD:0001

;=====================================================================
[Registry_WriteVivaldiHTM]
;=====================================================================

openkey [HKEY_CLASSES_ROOT\VivaldiHTM]
set "" = "Vivaldi HTML Document"
openkey [HKEY_CLASSES_ROOT\VivaldiHTM\DefaultIcon]
set "" = "$InstallDir$\$MainBin$,0"
openkey [HKEY_CLASSES_ROOT\VivaldiHTM\shell\open\command]
set "" = '"$InstallDir$\$MainBin$" -- "%1"'
;openkey [HKEY_CLASSES_ROOT\VivaldiHTM\ShellEx\IconHandler]
;set "" = "{42042206-2D85-11D3-8CFF-005004838597}"

;openkey [HKEY_CLASSES_ROOT\CLSID\{42042206-2D85-11D3-8CFF-005004838597}\Old Icon\VivaldiHTM\DefaultIcon]
;set "" = "$InstallDir$\$MainBin$,0"

openkey [HKEY_CLASSES_ROOT\.htm\OpenWithProgIDs]
set "VivaldiHTM" = ""
openkey [HKEY_CLASSES_ROOT\.html\OpenWithProgIDs]
set "VivaldiHTM" = ""
openkey [HKEY_CLASSES_ROOT\.xht\OpenWithProgIDs]
set "VivaldiHTM" = ""
openkey [HKEY_CLASSES_ROOT\.xhtml\OpenWithProgIDs]
set "VivaldiHTM" = ""
openkey [HKEY_CLASSES_ROOT\.xhtml\OpenWithProgIDs]
set "VivaldiHTM" = ""
openkey [HKEY_CLASSES_ROOT\.pdf\OpenWithProgIDs]
set "VivaldiHTM" = ""
openkey [HKEY_CLASSES_ROOT\.svg\OpenWithProgIDs]
set "VivaldiHTM" = ""
openkey [HKEY_CLASSES_ROOT\.webp\OpenWithProgIDs]
set "VivaldiHTM" = ""
openkey [HKEY_CLASSES_ROOT\.shtml\OpenWithProgIDs]
set "VivaldiHTM" = ""


openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet\Vivaldi]
set "" = "Vivaldi"

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet\Vivaldi\Capabilities]
set "ApplicationDescription" = "Vivaldi is a web browser that loads web pages and apps in seconds while being extremely stable and user-friendly. Integrated malware and phishing protection lets you surf the Internet with confidence."
set "ApplicationIcon"="$InstallDir$\$MainBin$,0"
set "ApplicationName"="Vivaldi"

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet\Vivaldi\Capabilities\Startmenu]
set "StartMenuInternet"="Vivaldi"

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet\Vivaldi\Capabilities\FileAssociations]
set ".htm"="VivaldiHTM"
set ".html"="VivaldiHTM"
set ".shtml"="VivaldiHTM"
set ".xht"="VivaldiHTM"
set ".xhtml"="VivaldiHTM"
set ".pdf"="VivaldiHTM"
set ".svg"="VivaldiHTM"
set ".webp"="VivaldiHTM"

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet\Vivaldi\Capabilities\URLAssociations]
set "ftp"="VivaldiHTM"
set "http"="VivaldiHTM"
set "https"="VivaldiHTM"
;set "irc"="VivaldiHTM"
;set "mailto"="VivaldiHTM"
;set "mms"="VivaldiHTM"
;set "news"="VivaldiHTM"
;set "nntp"="VivaldiHTM"
;set "sms"="VivaldiHTM"
;set "smsto"="VivaldiHTM"
;set "tel"="VivaldiHTM"
;set "urn"="VivaldiHTM"
;set "webcal"="VivaldiHTM"

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet\Vivaldi\DefaultIcon]
set "" = "$InstallDir$\$MainBin$,0"

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet\Vivaldi\InstallInfo]
set "ReinstallCommand" = '"$InstallDir$\$MainBin$" --make-default-browser'
set "HideIconsCommand" = '"$InstallDir$\$MainBin$" --hide-icons'
set "ShowIconsCommand" = '"$InstallDir$\$MainBin$" --show-icons'
set "IconsVisible" = REG_DWORD:00000001

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet\Vivaldi\shell\open\command]
set "" = "$InstallDir$\$MainBin$"

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\RegisteredApplications]
set "Vivaldi" = "Software\Clients\StartMenuInternet\Vivaldi\Capabilities"


;=====================================================================
[Registry_MakeVivaldiDefault]
;=====================================================================
openkey [HKEY_CLASSES_ROOT\.htm]
set "" = REG_SZ:"VivaldiHTM"
openkey [HKEY_CLASSES_ROOT\.html]
set "" = REG_SZ:"VivaldiHTM"
openkey [HKEY_CLASSES_ROOT\.xht]
set "" = REG_SZ:"VivaldiHTM"
openkey [HKEY_CLASSES_ROOT\.xhtml]
set "" = REG_SZ:"VivaldiHTM"
openkey [HKEY_CLASSES_ROOT\.shtml]
set "" = REG_SZ:"VivaldiHTM"
openkey [HKEY_CLASSES_ROOT\.svg]
set "" = REG_SZ:"VivaldiHTM"

openkey [HKEY_CLASSES_ROOT\http\DefaultIcon]
set "" = REG_SZ:'"$InstallDir$\$MainBin$",0'
openkey [HKEY_CLASSES_ROOT\http\shell\open\command]
set "" = REG_SZ:'"$InstallDir$\$MainBin$" -- "%1"'

openkey [HKEY_CLASSES_ROOT\https\DefaultIcon]
set "" = REG_SZ:'"$InstallDir$\$MainBin$",0'
openkey [HKEY_CLASSES_ROOT\https\shell\open\command]
set "" = REG_SZ:'"$InstallDir$\$MainBin$" -- "%1"'

openkey [HKEY_CLASSES_ROOT\ftp\DefaultIcon]
set "" = REG_SZ:'"$InstallDir$\$MainBin$",0'
openkey [HKEY_CLASSES_ROOT\ftp\shell\open\command]
set "" = REG_SZ:'"$InstallDir$\$MainBin$" -- "%1"'

openkey [HKEY_LOCAL_MACHINE\SOFTWARE\Clients\StartMenuInternet]
set "" = REG_SZ:"Vivaldi"


;=====================================================================
[Sub_InstallAppendix]
;=====================================================================
include_insert "%ScriptPath%\custom\" + $CustomPostInstall$


[EOF_setup]
